#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..."

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
admin_mail=$(ynh_user_get_info --username="$admin" --key=mail)
#REMOVEME? secret=$(ynh_app_setting_get --app=$app --key=secret)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	ynh_clean_check_starting
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists
then
	# And URL/sso legacy settings
#REMOVEME? 	ynh_legacy_permissions_delete_all
fi

# We can have no legacy permissions but still need to initialize new ones
set_initial_permissions

# MIGRATION : migrate from setting-based permission to new-style permissions

# Get legacy permission settings from settings
#REMOVEME? is_home_public=$(ynh_app_setting_get --app=$app --key=is_home_public)

if [ -n "$is_home_public" ]
then
	if [[ $is_home_public -eq 1 ]]
	then
#REMOVEME? 		ynh_permission_update --permission home_page --add visitors
	else
#REMOVEME? 		ynh_permission_update --permission home_page --remove visitors
	fi
	ynh_app_setting_delete --app=$app --key=is_home_public
fi

# MIGRATION : Enable django auth module
if ! grep -q 'YNH_INTEGRATION_ENABLED = True' $install_dir/compteur/settings_local.py
then
	echo 'YNH_INTEGRATION_ENABLED = True' >> $install_dir/compteur/settings_local.py
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep="conf/gunicorn_config.py"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..."

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# SPECIFIC UPGRADE
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

if [ "$path" = "/" ]
then
    cdgpath=""
else
    cdgpath="${path:1}/"
fi

ynh_add_config --template="../conf/settings_local.py.example" --destination="$install_dir/compteur/settings_local.py"
ynh_add_config --template="../conf/gunicorn_config.py" --destination="$install_dir/gunicorn_config.py"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..."

pushd $install_dir
#REMOVEME? 	ynh_secure_remove --file="$install_dir/venv"
	python3 -m venv $install_dir/venv
	set +u;
	source $install_dir/venv/bin/activate
	set -u;
	pip install --upgrade pip
	pip install gunicorn
	pip install -r $install_dir/requirements.txt -r $install_dir/requirements-yunohost.txt
	python3 manage.py migrate --noinput
	set +u;
	deactivate
	set -u;
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --log /var/log/$app/error.log /var/log/$app/access.log

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start" --log_path="systemd" --line_match="Started"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..."

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
